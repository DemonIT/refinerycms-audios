<%= render 'form_flash_errors' %>
<%= form_for @audio, :url => @audio.new_record? ? refinery.audios_admin_audios_path : refinery.audios_admin_audio_path,
         :html => { :multipart => true, :method => @audio.new_record? ? 'post' : 'put'},
                                        :as => 'audio' do |f| %>

  <%= render '/refinery/admin/error_messages',
              :object => @audio,
              :include_object_name => true %>

  <div class='field'>
    <%= f.label :title -%>
    <%= f.text_field :title, :class => 'widest', :required => 'required', :placeholder => t('title', scope: 'activerecord.attributes.refinery/audios/audio') -%>
  </div>

  <div class='field'>
    <%= f.label :description -%>
    <%= f.text_area :description, :class => 'widest', :style => 'height: 100px;' -%>
  </div>

  <% if @audio.new_record? %>
    <% whitelisted_mime_types = Refinery::Audios.whitelisted_mime_types
       file_size_limit = Refinery::Audios.max_file_size.to_i
    %>
      <div class="field">
        <%= f.file_field :file, accept: whitelisted_mime_types.join(','), filesizelimit: file_size_limit, required: 'required' %>
        <%= f.label :file, t('.maximum_file_size', :bytes => number_to_human_size(file_size_limit)) %>
        <%= t('.file_tip', :type_files => whitelisted_mime_types.map{|ftype| "*.#{ftype.split('/').last}"}.uniq.join(', ')) %>
      </div>
  <% else %>
        <%= render 'show_audio', audio: @audio %>
  <% end %>

  <%= render '/refinery/admin/form_actions', :f => f,
             :continue_editing => false,
             :delete_title => t('delete', :scope => 'refinery.audios.admin.audios.audio'),
             :delete_confirmation => t('message', :scope => 'refinery.admin.delete', :title => @audio.title) -%>
<% end -%>

<% content_for :javascripts do -%>
  <script>
    $(document).ready(function(){
      page_options.init(false, '', '');
        bindMediaFormSubmit('audio');
    });
  </script>
<% end -%>